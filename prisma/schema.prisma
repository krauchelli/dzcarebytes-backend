// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  role User_Role
  email String
  name String
  age Int 
  gender Gender
  
  medicalRecordsAsPatient Medical_Record[] @relation("PatientMedicalRecords")
  medicalRecordsAsDoctor  Medical_Record[] @relation("DoctorMedicalRecords")
  
  schedulingAsPatient Scheduling[] @relation("PatientScheduling")
  schedulingAsDoctor Scheduling[] @relation("DoctorScheduling")

  billing Billing[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pharmacy {
  medicine_name String @id
  stock Int 
  price Decimal

  medical_records Medical_Record[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Medical_Record {
  id String @id @default(uuid())
  patient_id String
  doctor_id String
  diagnosis String
  medicine_name String
  quantity Int
  
  patient User @relation("PatientMedicalRecords", fields: [patient_id], references: [id])
  doctor User @relation("DoctorMedicalRecords", fields: [doctor_id], references: [id])
  
  medicines Pharmacy @relation(fields: [medicine_name], references: [medicine_name])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Scheduling {
  id String @id @default(uuid())
  patient_id String
  doctor_id String
  date DateTime
  status Status_Scheduling
  price Decimal
  
  patient User @relation("PatientScheduling", fields: [patient_id], references: [id])
  doctor User @relation("DoctorScheduling", fields: [doctor_id], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 

model Billing {
  id String @id @default(uuid())
  patient_id String
  medicine_price Decimal
  scheduling_price Decimal //Scheduling.price
  total_price Decimal
  status Status_Billing
  payment_link String

  patient User @relation(fields: [patient_id], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum User_Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum Gender {
  MALE
  FEMALE
}

enum Status_Scheduling {
  SCHEDULED
  COMPLETED
  CANCELED
}

enum Status_Billing {
  PENDING
  PAID
  FAILED
}